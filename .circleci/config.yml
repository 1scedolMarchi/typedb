#
# Copyright (C) 2018 Grakn Labs
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/linux.sh
      - run: bash ./linux.sh && rm ./linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/dependencies/master/tool/bazelinstall/rbe.sh
      - run: bash ./rbe.sh && rm ./rbe.sh

  run-bazel:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_dependencies//tool/bazelrun:rbe -- << parameters.command >>

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel build //...
      - run:
          name: Verify dependencies/maven/artifacts.snapshot
          command: |
            dependencies/maven/update.sh
            git diff --exit-code dependencies/maven/artifacts.snapshot
      - run: bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list

  build-checkstyle:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run: bazel run @graknlabs_dependencies//tool/checkstyle:test-coverage
      - run-bazel:
          command: bazel test $(bazel query 'kind(checkstyle_test, //...)')

  build-analysis:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run: |
          SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
            bazel run @graknlabs_dependencies//tool/sonarcloud:code-analysis -- \
            --organisation=$SONARCLOUD_ORGANISATION \
            --project-key=$SONARCLOUD_PROJECT_KEY \
            --commit-id=$CIRCLE_SHA1 \
            --branch=$CIRCLE_BRANCH

  test-basic:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel test //test/integration:test-basic --test_output=errors

  test-connection:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel test //test/behaviour/connection/database:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/connection/session:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/connection/transaction:test --test_output=errors

  test-concept:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel test //test/behaviour/concept/type/entitytype:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/concept/type/relationtype:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/concept/type/attributetype:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/concept/thing/entity:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/concept/thing/attribute:test --test_output=errors
      - run-bazel:
          command: bazel test //test/behaviour/concept/thing/relation:test --test_output=errors

  test-query:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run-bazel:
          command: bazel test //test/integration:test-query --test_output=errors

  deploy-artifact-snapshot:
    machine: true
    working_directory: ~/grakn
    steps:
      - install-bazel
      - checkout
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_GRAKN_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_GRAKN_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //server:deploy-linux-targz -- snapshot
          bazel run --define version=$(git rev-parse HEAD) //server:deploy-mac-zip -- snapshot

workflows:
  grakn:
    jobs:
      - build
      - build-checkstyle
      - build-analysis:
          filters:
            branches:
              only:
                - master
      - test-basic
      - test-connection
      - test-concept
      # - test-query
      - deploy-artifact-snapshot:
          filters:
            branches:
              only:
                - master
